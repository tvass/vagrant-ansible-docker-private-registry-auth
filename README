$ sudo vi /etc/hosts
...
192.168.122.158 registry.example.com


$ sudo vi /etc/containers/registries.conf 
...
[registries.insecure]
registries = ['registry.example.com:5000']
...

$ sudo systemctl restart docker
$ git clone https://github.com/tvass/vagrant-ansible-docker-private-registry-auth/
 && cd vagrant-ansible-docker-private-registry-auth

$ vagrant up
Bringing machine 'test_vm1' up with 'libvirt' provider...
==> test_vm1: Creating image (snapshot of base box volume).
==> test_vm1: Creating domain with the following settings...
==> test_vm1:  -- Name:              vagrant-docker-private-registry_test_vm1
==> test_vm1:  -- Domain type:       kvm
==> test_vm1:  -- Cpus:              1
==> test_vm1:  -- Feature:           acpi
==> test_vm1:  -- Feature:           apic
==> test_vm1:  -- Feature:           pae
==> test_vm1:  -- Memory:            512M
==> test_vm1:  -- Management MAC:    
==> test_vm1:  -- Loader:            
==> test_vm1:  -- Base box:          centos/7
==> test_vm1:  -- Storage pool:      default
==> test_vm1:  -- Image:             /var/lib/libvirt/images/vagrant-docker-private-registry_test_vm1.img (41G)
==> test_vm1:  -- Volume Cache:      default
==> test_vm1:  -- Kernel:            
==> test_vm1:  -- Initrd:            
==> test_vm1:  -- Graphics Type:     vnc
==> test_vm1:  -- Graphics Port:     5900
==> test_vm1:  -- Graphics IP:       127.0.0.1
==> test_vm1:  -- Graphics Password: Not defined
==> test_vm1:  -- Video Type:        cirrus
==> test_vm1:  -- Video VRAM:        9216
==> test_vm1:  -- Sound Type:	
==> test_vm1:  -- Keymap:            en-us
==> test_vm1:  -- TPM Path:          
==> test_vm1:  -- INPUT:             type=mouse, bus=ps2
==> test_vm1: Creating shared folders metadata...
==> test_vm1: Starting domain.
==> test_vm1: Waiting for domain to get an IP address...
==> test_vm1: Waiting for SSH to become available...
    test_vm1: 
    test_vm1: Vagrant insecure key detected. Vagrant will automatically replace
    test_vm1: this with a newly generated keypair for better security.
    test_vm1: 
    test_vm1: Inserting generated public key within guest...
    test_vm1: Removing insecure key from the guest if it's present...
    test_vm1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> test_vm1: Setting hostname...
==> test_vm1: Configuring and enabling network interfaces...
    test_vm1: SSH address: 192.168.121.79:22
    test_vm1: SSH username: vagrant
    test_vm1: SSH auth method: private key
==> test_vm1: Rsyncing folder: /home/tvass/Documents/work/vagrant-docker-private-registry/ => /vagrant
==> test_vm1: Running provisioner: ansible...
Vagrant has automatically selected the compatibility mode '2.0'
according to the Ansible version installed (2.6.2).

Alternatively, the compatibility mode can be specified in your Vagrantfile:
https://www.vagrantup.com/docs/provisioning/ansible_common.html#compatibility_mode

    test_vm1: Running ansible-playbook...
 ____________
< PLAY [all] >
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
< TASK [Gathering Facts] >
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [test_vm1]
 _______________________
< TASK [add repository] >
 -----------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 _____________________________
< TASK [upgrade all packages] >
 -----------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 _________________________
< TASK [install packages] >
 -------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1] => (item=docker)
changed: [test_vm1] => (item=python-pip)
 _____________________________________
< TASK [Install docker python module] >
 -------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1] => (item=docker-compose)
changed: [test_vm1] => (item=pyOpenSSL)
 _______________________
< TASK [start services] >
 -----------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1] => (item=docker)
 __________________________
< TASK [create config dir] >
 --------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 __________________________
< TASK [copy config files] >
 --------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 _________________________________________
< TASK [Generate an OpenSSL private key.] >
 -----------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 _________________________________
< TASK [Generate an OpenSSL CSR.] >
 ---------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 ___________________________________________________
< TASK [Generate a Self Signed OpenSSL certificate] >
 ---------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 __________________
< TASK [Fix chmod] >
 ------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 ___________________________
< TASK [create docker_auth] >
 ---------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 _______________________________
< TASK [create docker_registry] >
 -------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [test_vm1]
 ____________
< PLAY RECAP >
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

test_vm1                   : ok=14   changed=13   unreachable=0    failed=0 

$ vagrant ssh -c "sudo docker ps "
CONTAINER ID        IMAGE                   COMMAND                  CREATED              STATUS              PORTS               NAMES
fa2a9120f173        registry:2              "/entrypoint.sh /e..."   About a minute ago   Up About a minute                       docker_registry
70d4c4b930fb        cesanta/docker_auth:1   "/docker_auth/auth..."   7 minutes ago        Up 7 minutes                            docker_auth

$ docker pull busybox
Using default tag: latest
Trying to pull repository docker.io/library/busybox ... 
sha256:cb63aa0641a885f54de20f61d152187419e8f6b159ed11a251a09d115fdff9bd: Pulling from docker.io/library/busybox
8c5a7da1afbc: Pull complete 
Digest: sha256:cb63aa0641a885f54de20f61d152187419e8f6b159ed11a251a09d115fdff9bd
Status: Downloaded newer image for docker.io/busybox:latest

$ docker images
REPOSITORY                                                  TAG                 IMAGE ID            CREATED             SIZE
docker.io/busybox                                           latest              e1ddd7948a1c        3 weeks ago         1.16 MB

$ docker tag docker.io/busybox registry.example.com:5000/thomas/busybox
$ docker push registry.example.com:5000/thomas/busybox
The push refers to a repository [registry.example.com:5000/thomas/busybox]
f9d9e4e6e2f0: Preparing 
unauthorized: authentication required

$ docker login registry.example.com:5000
Username: admin
Password: 
Login Succeeded

$ docker push registry.example.com:5000/thomas/busybox
The push refers to a repository [registry.example.com:5000/thomas/busybox]
f9d9e4e6e2f0: Pushed 
latest: digest: sha256:5e8e0509e829bb8f990249135a36e81a3ecbe94294e7a185cc14616e5fad96bd size: 527


